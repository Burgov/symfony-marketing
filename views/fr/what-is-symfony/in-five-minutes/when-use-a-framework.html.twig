{% block title 'Quand dois-je utiliser un framework ?' %}
{% block keywords '' %}
{% block description '' %}

{% block intro %}
    <p>
        Eh bien... Chaque fois que vous en avez besoin, tout en développant une application web ou un site, bien sûr !
    </p>
    <p>
        Pourquoi voudriez-vous avoir un morceau de meuble personnalisé si vous pouvez en trouver
        un qui correspond parfaitement à votre décor, juste à côté de l'étagère ? La même chose
        est vraie pour les applications informatiques :
        Avant de vous plonger dans la création d'un framework, un travail préliminaire est à
        réaliser.
    </p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Besoins généraux vs. fonctions spécifiques</h2>
    <p>
        En plus d'un framework, il existe d'autres solutions disponibles pour développer des
        sites et applications web: les SGCs (Système de Gestion de Contenu ou CMS) et leurs
        modules complémentaires, et également les progiciels professionnels (GRC ou CRM, solutions
        e-commerce, etc.).
        Si leurs fonctionnalités natives s'accordent parfaitement avec vos besoins immédiats
        et futurs, pas de questions à se poser : Allez-y ! Il n'y a aucun avantage à réinventer
        la roue.
    </p>
    <p>
        D'un autre côté, dès lors qu'il y a des besoins spécifiques, des règles de gestions
        spécifiques ou bien le besoin de faire un mélange de composantes (contenu et e-commerce,
        par exemple), une solution avec un framework est nécessaire : cela permet à l'application
        d'être développée en adéquation avec vos besoins, tout en étant innovante.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Les bonnes questions</h2>
    <p>
        Pour vous assurer que vous faites le bon choix, autant pour le court que le long
        terme, il est nécessaire de vous poser les bonnes questions :
    </p>
    <ol>
        <li>Quels sont mes besoins actuels ?  Sont-ils pris en charge par un progiciel ?</li>
        <li>De quelles compétences ai-je besoin si je choisi un framework ?</li>
        <li>Est-ce que la solution développée pourra être mise à niveau ?</li>
    </ol>
    <p>
        Et enfin, ne tombez pas dans le piège de "l'apparente simplicité des besoins".
        Dans de nombreux cas cela devient apparent que les règles de gestion et les fonctions
        à implémenter ne sont pas si simples à mettre en place.
    </p>
    <p>
        Par ailleurs, Symfony est aussi très bien adapté pour des "minis projets".
    </p>
{% endblock %}

{% block summary %}
    <p>Un framework peut être adapté à tous les besoins.</p>
    <p>... mais son utilisation n'est pas toujours nécessaire, principalement quand les besoins sont d'une nature plus générique.</p>
    <p>Avant de faire votre choix, évaluez vos besoins présents et futurs en détail, et ensuite comparez les divers solutions disponibles sur le marché.</p>
{% endblock %}
